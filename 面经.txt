阿里口碑一面面经：
（1）面试官介绍部门
（2）简单的自我介绍
（3）项目介绍
-----去重，怎么做？可以说都是一个站点一个站点爬取，然后基于一个站点进行过滤，避免进行数据库查询
-----用户操作记录，使用哈希分表，分库，优化
（4）索引怎么优化   ---可以创建单列索引、多列索引应该注意选择性强的放前面
（5）怎么查询sql语句的性能  --explain关键字
（6）假如有两个查询，第一个查询a,第二个查询 a 和 b,应该怎么设置索引   ---设置联合索引，a 和 b，将a放在最左边，因为最左缀匹配原则
（7）给两个字符串A 和 B，怎么组成字符串AB ----使用stringBuffer和stringBuilder，说一下这两者的区别
（8）说一下线程安全 --- 说了几种实现线程安全问题的方法
（9）说一下线程本地存储的原理，threadMap的实现原理
（10）说一下熟悉的设计模式  ---说了单例模式，说了懒汉和饿汉模式，懒汉会出现线程安全问题，使用双重检验锁定和volatite关键字禁止指令重排
（11）说一下单例设计模式应该注意的地方   --创建私有的对象、提供静态的公共方法、使用双重检验锁定，防止线程安全

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


cvte web后台一面面经：
（1）简单的自我介绍
（2）学过spring，介绍一下spring mvc的执行流程
（3）说一下对spring AOP的了解，原理  ----讲了一下它的作用，并结合了一下最近做的项目，怎么使用
（4）mybatis中#和$的区别，会导致什么问题  ----说到了 $可能会导致sql注入，并举了一个例子
（5）存储引擎的区别    --InnoDB 和 MyISAM的区别
（6）说一下数据库的索引，原理，索引匹配的原则
（7）说一下redis   ---举了平时做的一个项目，其中为什么用到redis，用到redis的好处
（8）说一下事务的了解，平时有没用到
（9）java内存模型       ----讲解了一些 线程每次都要从主内存中拿到变量副本，使用完之后要把工作内存中的变量同步到主内存中
（10）垃圾回收算法，应用场景
（11）hashmap,hashtable,concurrentHashmap的区别
（12）分库分表怎么做
（13）线程安全场景以及解决

cvte web后台二面面经：（一个多小时）
（1）全程怼项目，问了很多细节，所以项目还是要好好准备一下的
（2）出了一道简单的算法题
     ----写出1到1000之间的素数
	 ----怎么优化，在O(n)时间内找出所有素数
（3）介绍了一下他们公司打算做的一个项目中的一个小版块，问你怎么规划
     ---说一下你的思路
	 ---给你多少时间，可以做出来
	 ---假如给你3个月时间，你还打算集合哪些模块

	 
终面：全程聊日常、薪资、规划等，日常吹水（hr小姐姐人还是挺不错的，夸了一波说听不出我的口音是潮汕人hhhh）

------------------------------------------------------------------------------------------------------------------------------------------------------------------


（1）怎么防止重复秒杀？
-----  前端处理：用户点击一次之后，按钮变灰，不能在点
-----  后端处理：（1）跳转到详情页面的时候，生成一个随机token,保存session到服务器,同时将这个值作为隐藏域放在页面中
                 当提交的时候，会将这个作为参数传递，第一次提交的时候，会与session中的token比较，相等则可以提交成功，并将session属性移除
				 （2）上述不能防止刷新页面的时候，可以重复秒杀
				  所以在第一次提交的时候，会在session中保存当前的时间戳，以后每次提交都会与session中的时间戳比较，不等则重复提交了，同时更新session中的值
				 

（2）怎么优化？ -- 针对两个部分，并发量比较少和并发量比较多的
（3）取消订单之后，库存应该怎么处理
（4）很多人取消订单
（5）怎么解决超卖？   


限流： 一单秒杀开始，实际秒杀成功的用户只是库存的数量，在库存没有之后，将前端的秒杀入口关闭。

削峰：数据库削峰。对于秒杀系统瞬时会有大量用户涌入，所以在抢购一开始会有很高的瞬间峰值。对于关系型数据库而言，
这个是致命的，是压垮系统很重要的原因，所以如何把瞬间的高流量变成一段时间平稳的流量也是设计秒杀系统很重要的思路。
实现削峰的常用的方法有利用缓存和消息中间件等技术。

异步处理：秒杀系统是一个高并发系统，采用异步处理模式可以极大地提高系统并发量，其实异步处理就是削峰的一种实现方式。


自我介绍-》项目介绍-》死扣随手签-》用了什么技术、什么难点、什么亮点-》http协议-》长连接短连接http1.0 http1.1-》mysql索引、mysql引擎、mysql优化-》多线程注意的问题-》三个机制的区别和实现类-》如何解决线程安全-》线程的几大状态、生命周期，什么情景改变线程状态-》最后是java基础，i++，++i区别，long int的字节数位数
还有get post 
tcpudp 3次握手 4次挥手
如果3次握手变成2次握手会发生什么
是否还能继续传输	
还有dns域名解析过程
tcp传输的时候是可靠传输 不会丢包，但是会发生粘包拆包现象









